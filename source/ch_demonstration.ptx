<?xml version='1.0' encoding='utf-8'?>
<!-- Chapters are enclosed with <chapter> tags. Use xml:id to -->
<!-- uniquely identify the chapter.  The @xmlns:xi attribute  -->
<!-- is needed if you use xi:include in this file             -->

<chapter xml:id="ch-demonstration" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Demonstration</title>
    <section xml:id="section-demonstration-usage">
        <title>Usage</title>
        <p>
            I have worked up a prototype parser of XML markup to PGML WeBWorK problems.
            In my <c>dynamic-examples</c> branch of the PreTeXt <c>mathbook</c> project,
            I have added a file <c>dynamic-runestone-fitb.xsl</c> to facilitate Runestone javascript implementation and <c>dynamic-webwork-fitb.xsl</c> to facilitate WeBWorK <c>.pg</c> file generation.
        </p>
        <p>
            To generate WeBWorK <c>.pg</c> files, we would use the following syntax to call the routine.
        </p>
        <pre>
&gt; cd ::project-directory::
&gt; mkdir pg; cd pg
&gt; xsltproc --xinclude ::pretext-path::/xsl/dynamicexercise.xsl ::project-root-xml::
        </pre>
        <p>
            To generate HTML that implements the Runestone javascript versions, we would use the following syntax to call the routine. In addition, there needs to be a modification of the <c>.js</c> and <c>.css</c> Runestone files included in the header. Instead of using the standard files, we need to include the custom versions of the prototype version created by Bryan Jones.
            I still need to standardize how these files are included.
        </p>
        <pre>
&gt; cd ::project-directory::
&gt; mkdir html; cd html
&gt; xsltproc --xinclude ::pretext-path::/xsl/dynamicexercise.xsl ::project-root-xml::
        </pre>
    </section>
    <section xml:id="section-markup-examples">
        <title>Examples of Markup</title>

        <p>
        The first example is for solving a linear equation of the form <m>mx+b=0</m>.
        The parameters <m>m</m> and <m>b</m> are created randomly.
        </p>

        <listing>
        <pre><xi:include href="ex-solve-equation.ptx" parse="text" /></pre>
        <caption><c>ex-solve-equation.ptx</c></caption>
        </listing>
    <!--
        <listing>
        <pre><xi:include href="../pg/solve-equation.pg" parse="text" /></pre>
        <caption><c>solve-equation.pg</c></caption>
        </listing>
    -->

        <example xml:id="solve-equation-fill">
        <title>Solve an Equation</title>
        <statement>
            <p>
            Solve the equation <m>{{m}}*x+{{b}}=0</m>
            to get the value of <m>x</m>.
            </p>
            <p><m>x = </m> <fillin width="5" correct="theAnswer" submit="solution"/></p>
        </statement>
        <solution>
            <p>
            We want to isolate the <m>x</m> in the equation <m>{{m}}*x+{{b}}=0</m>.
            Because addition of <m>{{b}}</m> is the last operation, we apply the inverse by adding <m>{{negB}}</m> to both sides.
            The new, but equivalent equation is now <m>{{m}}x = {{negB}}</m>.
            Dividing both sides of the equation by <m>{{m}}</m>, we obtain the solution <m>x={{theAnswer}}</m>.
            </p>
        </solution>
        </example>
        
        <p>
        A second example is calculating derivatives of a simple polynomial of the form <m>f(x)=ax^n+b</m>.
        The parameters <m>a</m>, <m>b</m>, and <m>n</m> are created randomly.
        </p>

        <listing>
        <pre><xi:include href="ex-find-derivatives.ptx" parse="text" /></pre>
        <caption><c>ex-solve-equation.ptx</c></caption>
        </listing>
        <!--
        <listing>
        <pre><xi:include href="../pg/find-derivatives.pg" parse="text" /></pre>
        <caption><c>solve-equation.pg</c></caption>
        </listing>
    -->

        <p>
        A third example illustrates coupled answers and asks to find two functions
        <m>f</m> and <m>g</m> so that <m>f(g(x))</m> equals a given function.
        </p>

        <listing>
        <pre><xi:include href="ex-find-derivatives.ptx" parse="text" /></pre>
        <caption><c>ex-solve-equation.ptx</c></caption>
        </listing>
        <!--
        <listing>
        <pre><xi:include href="../pg/find-derivatives.pg" parse="text" /></pre>
        <caption><c>solve-equation.pg</c></caption>
        </listing>
    -->

        <p>
            I also am playing with including graphics that are dynamically generated.
            Here is an example of a problem that graphs a function and asks for the equation of the tangent line.
        </p>

        <listing>
            <pre><xi:include href="ex-find-tangent-line.ptx" parse="text" /></pre>
            <caption><c>ex-solve-equation.ptx</c></caption>
        </listing>
    </section>
</chapter>
